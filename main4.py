import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏
ADMIN_ID = 929334625  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID
SUPPORT_ID = 848337587  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —Å–ª—É–∂–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
FEEDBACK_CHANNEL_ID = "-1002394099637"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID

# –ö—ç—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤
feedback_cache = []

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def get_main_keyboard():
    return ReplyKeyboardMarkup([
        [KeyboardButton("üõ† –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–≤–∞—Ä–æ–º"), KeyboardButton("üì¶ –ü—Ä–∏—à—ë–ª –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä")],
        [KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")],
        [KeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤"), KeyboardButton("üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")],
        [KeyboardButton("üí∏ –ö—ç—à–±—ç–∫ –∑–∞ –æ—Ç–∑—ã–≤")]
    ], resize_keyboard=True)

def get_rating_keyboard():
    return ReplyKeyboardMarkup([
        [KeyboardButton("‚≠êÔ∏è 1"), KeyboardButton("‚≠êÔ∏è 2"), KeyboardButton("‚≠êÔ∏è 3")],
        [KeyboardButton("‚≠êÔ∏è 4"), KeyboardButton("‚≠êÔ∏è 5"), KeyboardButton("üö´ –ë–µ–∑ –æ—Ü–µ–Ω–∫–∏")]
    ], resize_keyboard=True)

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
async def forward_to_support(update: Update, context: ContextTypes.DEFAULT_TYPE, issue_type: str):
    user = update.message.from_user
    user_info = f"üë§ {user.full_name} "
    if user.username:
        user_info += f"(username: @{user.username}) "
    user_info += f"(ID: {user.id})\n"
    
    time_str = datetime.now().strftime("%d.%m.%Y %H:%M")
    
    message = (
        f"üö® –ù–û–í–û–ï –û–ë–†–ê–©–ï–ù–ò–ï\n"
        f"–¢–∏–ø: {issue_type}\n"
        f"–í—Ä–µ–º—è: {time_str}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n{user_info}\n"
    )
    
    if update.message.text:
        message += f"–°–æ–æ–±—â–µ–Ω–∏–µ:\n{update.message.text}"
        await context.bot.send_message(SUPPORT_ID, message)
    elif update.message.photo:
        caption = f"{message}\n{update.message.caption}" if update.message.caption else message
        await context.bot.send_photo(
            SUPPORT_ID, 
            update.message.photo[-1].file_id, 
            caption=caption[:1000]
        )
    elif update.message.document:
        caption = f"{message}\n{update.message.caption}" if update.message.caption else message
        await context.bot.send_document(
            SUPPORT_ID, 
            update.message.document.file_id, 
            caption=caption[:1000]
        )

# –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∫—ç—à–±—ç–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def send_cashback_request(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_info = f"üë§ {user.full_name} "
    if user.username:
        user_info += f"(username: @{user.username}) "
    user_info += f"(ID: {user.id})"
    
    time_str = datetime.now().strftime("%d.%m.%Y %H:%M")
    details = context.user_data.get('cashback_details', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')
    
    message = (
        f"üí∏ –ó–ê–ü–†–û–° –ö–≠–®–ë–≠–ö–ê\n"
        f"–í—Ä–µ–º—è: {time_str}\n"
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info}\n"
        f"–†–µ–∫–≤–∏–∑–∏—Ç—ã:\n{details}"
    )
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        if 'cashback_photo' in context.user_data:
            await context.bot.send_photo(
                chat_id=ADMIN_ID,
                photo=context.user_data['cashback_photo'],
                caption=message
            )
        else:
            await context.bot.send_message(
                chat_id=ADMIN_ID,
                text=message
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫—ç—à–±—ç–∫-–∑–∞–ø—Ä–æ—Å–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ª–∏–Ω–∏—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–≥–∞–∑–∏–Ω–∞ SUNNE fashion. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:",
        reply_markup=get_main_keyboard()
    )

async def show_feedbacks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞
        messages = []
        try:
            async for msg in context.bot.get_chat_history(chat_id=FEEDBACK_CHANNEL_ID, limit=5):
                if msg.text:
                    messages.append(msg.text)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞: {e}")
        
        if messages:
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞
            feedbacks_text = "üåü –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã:\n\n"
            for i, msg in enumerate(messages, 1):
                parts = msg.split('\n')
                feedback = parts[0]  # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ - —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
                
                # –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –æ—Ü–µ–Ω–∫–æ–π
                rating_line = ""
                for part in parts:
                    if "‚≠êÔ∏è" in part or "üö´" in part:
                        rating_line = part
                        break
                
                feedbacks_text += f"{i}. {feedback}\n"
                if rating_line:
                    feedbacks_text += f"{rating_line}\n"
                feedbacks_text += "\n"
            
            await update.message.reply_text(feedbacks_text)
            return
        elif feedback_cache:
            # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à
            last_five = feedback_cache[-5:][::-1]
            cache_text = "üåü –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã:\n\n"
            for i, fb in enumerate(last_five, 1):
                parts = fb.split('\n')
                cache_text += f"{i}. {parts[0]}\n"
                if len(parts) > 1:
                    cache_text += f"{parts[1]}\n"
                cache_text += "\n"
            await update.message.reply_text(cache_text)
            return
        else:
            await update.message.reply_text("–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –ë—É–¥—å—Ç–µ –ø–µ—Ä–≤—ã–º!")
            return
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –æ—Ç–∑—ã–≤–æ–≤: {e}")
        await update.message.reply_text(
            "–ü—Ä–∏–º–µ—Ä—ã –æ—Ç–∑—ã–≤–æ–≤:\n\n"
            "1. –û—Ç–ª–∏—á–Ω—ã–π —Ç–æ–≤–∞—Ä! –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è\n\n"
            "2. –ö–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å–æ—Ç–µ\n‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è\n\n"
            "3. –ù–µ–¥–æ–≤–æ–ª–µ–Ω —É–ø–∞–∫–æ–≤–∫–æ–π\n‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è\n\n"
            "4. –ü—Ä–æ–¥—É–∫—Ç —Å—É–ø–µ—Ä\n‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è\n\n"
            "5. –í—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å\nüö´ –ë–µ–∑ –æ—Ü–µ–Ω–∫–∏"
        )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text
    
    # –ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ—Ç–∑—ã–≤–æ–≤
    if text == "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã":
        await show_feedbacks(update, context)
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    support_messages = {
        "üõ† –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–≤–∞—Ä–æ–º": (
            "üõ† <b>–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–≤–∞—Ä–æ–º</b>\n\n"
            "–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É —Å —Ç–æ–≤–∞—Ä–æ–º –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —Ä–µ—à–∏—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.\n\n"
            "<i>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏.</i>"
        ),
        "üì¶ –ü—Ä–∏—à—ë–ª –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä": (
            "üì¶ <b>–ü—Ä–∏—à—ë–ª –Ω–µ —Ç–æ—Ç —Ç–æ–≤–∞—Ä</b>\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏ –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π —Ç–æ–≤–∞—Ä –≤—ã –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ –∏ –∫–∞–∫–æ–π –ø—Ä–∏—à–µ–ª –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ. "
            "–ú—ã —Ä–µ—à–∏–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É –≤ –∫—Ä–∞—Ç—á–∞–π—à–∏–µ —Å—Ä–æ–∫–∏.\n\n"
            "<i>–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–æ—Ç–æ –æ—à–∏–±–æ—á–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞.</i>"
        ),
        "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å": (
            "‚ùì <b>–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</b>\n\n"
            "–ó–∞–¥–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –Ω–µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. "
            "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞, —É–∫–∞–∂–∏—Ç–µ –µ–≥–æ –Ω–æ–º–µ—Ä."
        )
    }
    
    if text in support_messages:
        context.user_data['support_issue'] = text
        await update.message.reply_html(
            support_messages[text],
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–æ–≤–∞—Ä–æ–º, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä, –≤–æ–ø—Ä–æ—Å—ã)
    if 'support_issue' in context.user_data:
        issue_type = context.user_data['support_issue']
        await forward_to_support(update, context, issue_type)
        await update.message.reply_text(
            "‚úÖ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=get_main_keyboard()
        )
        del context.user_data['support_issue']
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
    if text == "üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤":
        await update.message.reply_text(
            "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤:",
            reply_markup=ReplyKeyboardRemove()
        )
        context.user_data['feedback_state'] = 'awaiting_text'
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∫—ç—à–±—ç–∫–∞ (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)
    if text == "üí∏ –ö—ç—à–±—ç–∫ –∑–∞ –æ—Ç–∑—ã–≤":
        context.user_data['cashback_state'] = 'awaiting_photo'
        await update.message.reply_text(
            "üì∏ –ü—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤–∞—à–µ–≥–æ –æ—Ç–∑—ã–≤–∞ –∏ —É–∫–∞–∂–∏—Ç–µ –≤ –ø–æ–¥–ø–∏—Å–∏:\n"
            "1. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n"
            "2. –ë–∞–Ω–∫ –∏–ª–∏ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞\n\n"
            "–ü—Ä–∏–º–µ—Ä –ø–æ–¥–ø–∏—Å–∏:\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: +79991234567\n"
            "–ö–∞—Ä—Ç–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞: 1234 5678 9012 3456",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫—ç—à–±—ç–∫–∞ (—Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ)
    if context.user_data.get('cashback_state') == 'awaiting_details':
        context.user_data['cashback_details'] = text
        await send_cashback_request(update, context)
        # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        context.user_data.pop('cashback_state', None)
        context.user_data.pop('cashback_photo', None)
        await update.message.reply_text(
            "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫—ç—à–±—ç–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=get_main_keyboard()
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–∑—ã–≤–∞
    if context.user_data.get('feedback_state') == 'awaiting_text':
        context.user_data['feedback_text'] = text
        context.user_data['feedback_state'] = 'awaiting_rating'
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ü–µ–Ω–∏—Ç–µ —Ç–æ–≤–∞—Ä (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ë–µ–∑ –æ—Ü–µ–Ω–∫–∏'):",
            reply_markup=get_rating_keyboard()
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ü–µ–Ω–∫–∏
    if context.user_data.get('feedback_state') == 'awaiting_rating':
        rating = None
        if '‚≠êÔ∏è' in text:
            try:
                rating = int(text.split()[1])
            except (IndexError, ValueError):
                rating = None
        elif text == "üö´ –ë–µ–∑ –æ—Ü–µ–Ω–∫–∏":
            rating = None
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–∞–Ω–∞–ª–∞
        feedback_text = context.user_data.get('feedback_text', '')
        channel_message = feedback_text
        if rating is not None:
            stars = '‚≠êÔ∏è' * rating
            channel_message += f"\n{stars}"
        else:
            channel_message += "\nüö´ –ë–µ–∑ –æ—Ü–µ–Ω–∫–∏"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –≤ –∫–∞–Ω–∞–ª
        try:
            await context.bot.send_message(
                chat_id=FEEDBACK_CHANNEL_ID,
                text=channel_message
            )
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
            feedback_cache.append(channel_message)
            # –î–µ—Ä–∂–∏–º –Ω–µ –±–æ–ª–µ–µ 50 –æ—Ç–∑—ã–≤–æ–≤ –≤ –∫—ç—à–µ
            if len(feedback_cache) > 50:
                feedback_cache.pop(0)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ –∫–∞–Ω–∞–ª: {e}")
            await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            context.user_data.pop('feedback_state', None)
            context.user_data.pop('feedback_text', None)
            return
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if rating is not None:
            stars = '‚≠êÔ∏è' * rating
            await update.message.reply_text(
                f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤ –∏ –æ—Ü–µ–Ω–∫—É {stars}!",
                reply_markup=get_main_keyboard()
            )
        else:
            await update.message.reply_text(
                "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!",
                reply_markup=get_main_keyboard()
            )
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        context.user_data.pop('feedback_state', None)
        context.user_data.pop('feedback_text', None)
        return

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ –¥–ª—è –∫—ç—à–±—ç–∫–∞ (–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)
    if context.user_data.get('cashback_state') == 'awaiting_photo' and update.message.photo:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        context.user_data['cashback_photo'] = update.message.photo[-1].file_id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∏ —Å —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º–∏
        if update.message.caption:
            context.user_data['cashback_details'] = update.message.caption
            await send_cashback_request(update, context)
            # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
            context.user_data.pop('cashback_state', None)
            context.user_data.pop('cashback_photo', None)
            await update.message.reply_text(
                "‚úÖ –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫—ç—à–±—ç–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É! –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
                reply_markup=get_main_keyboard()
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –Ω–µ—Ç - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ
            context.user_data['cashback_state'] = 'awaiting_details'
            await update.message.reply_text(
                "üìù –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                "–¢–µ–ª–µ—Ñ–æ–Ω: +79991234567\n"
                "–ö–∞—Ä—Ç–∞ –°–±–µ—Ä–±–∞–Ω–∫–∞: 1234 5678 9012 3456"
            )
        return
    
    # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É (–ø—Ä–æ–±–ª–µ–º—ã —Å —Ç–æ–≤–∞—Ä–æ–º, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–≤–∞—Ä, –≤–æ–ø—Ä–æ—Å—ã)
    if 'support_issue' in context.user_data:
        issue_type = context.user_data['support_issue']
        await forward_to_support(update, context, issue_type)
        await update.message.reply_text(
            "‚úÖ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
            reply_markup=get_main_keyboard()
        )
        del context.user_data['support_issue']
        return
    
    # –ï—Å–ª–∏ —ç—Ç–æ –æ—Ç–∑—ã–≤ —Å —Ñ–æ—Ç–æ - –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    if context.user_data.get('feedback_state') == 'awaiting_text':
        await update.message.reply_text(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤. –§–æ—Ç–æ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è.",
            reply_markup=get_main_keyboard()
        )
        context.user_data.pop('feedback_state', None)
        return

def main():
    application = Application.builder().token("7748869714:AAFT58Mc0wH9g_x9mbozRRWY_iXPFCdxnHU").build()
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("start", start))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(MessageHandler(filters.PHOTO | filters.Document.ALL, handle_media))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()